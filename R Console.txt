
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin10.8.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.61 (6492) x86_64-apple-darwin10.8.0]

> 
> 
> set("/~Desktop")
Error: could not find function "set"
> set("/~"~/dataviz-fall-2013/bar-chart"")
Error: unexpected '/' in "set("/~"~/"
> set(") setwd("~/dataviz-fall-2013/bar-chart") 
Error: unexpected '/' in "set(") setwd("~/"
> setwd("~/dataviz-fall-2013/bar-chart") 
Error in setwd("~/dataviz-fall-2013/bar-chart") : 
  cannot change working directory
> setwd("~/dataviz-fall 2013/bar-chart/")
> 
> "I should exercise more"
[1] "I should exercise more"
> 1 + 1
[1] 2
> 1 == 2
[1] FALSE
> 1 == 1 
[1] TRUE
> 1 : 1000
   [1]    1    2    3    4    5    6    7    8    9   10   11   12   13
  [14]   14   15   16   17   18   19   20   21   22   23   24   25   26
  [27]   27   28   29   30   31   32   33   34   35   36   37   38   39
  [40]   40   41   42   43   44   45   46   47   48   49   50   51   52
  [53]   53   54   55   56   57   58   59   60   61   62   63   64   65
  [66]   66   67   68   69   70   71   72   73   74   75   76   77   78
  [79]   79   80   81   82   83   84   85   86   87   88   89   90   91
  [92]   92   93   94   95   96   97   98   99  100  101  102  103  104
 [105]  105  106  107  108  109  110  111  112  113  114  115  116  117
 [118]  118  119  120  121  122  123  124  125  126  127  128  129  130
 [131]  131  132  133  134  135  136  137  138  139  140  141  142  143
 [144]  144  145  146  147  148  149  150  151  152  153  154  155  156
 [157]  157  158  159  160  161  162  163  164  165  166  167  168  169
 [170]  170  171  172  173  174  175  176  177  178  179  180  181  182
 [183]  183  184  185  186  187  188  189  190  191  192  193  194  195
 [196]  196  197  198  199  200  201  202  203  204  205  206  207  208
 [209]  209  210  211  212  213  214  215  216  217  218  219  220  221
 [222]  222  223  224  225  226  227  228  229  230  231  232  233  234
 [235]  235  236  237  238  239  240  241  242  243  244  245  246  247
 [248]  248  249  250  251  252  253  254  255  256  257  258  259  260
 [261]  261  262  263  264  265  266  267  268  269  270  271  272  273
 [274]  274  275  276  277  278  279  280  281  282  283  284  285  286
 [287]  287  288  289  290  291  292  293  294  295  296  297  298  299
 [300]  300  301  302  303  304  305  306  307  308  309  310  311  312
 [313]  313  314  315  316  317  318  319  320  321  322  323  324  325
 [326]  326  327  328  329  330  331  332  333  334  335  336  337  338
 [339]  339  340  341  342  343  344  345  346  347  348  349  350  351
 [352]  352  353  354  355  356  357  358  359  360  361  362  363  364
 [365]  365  366  367  368  369  370  371  372  373  374  375  376  377
 [378]  378  379  380  381  382  383  384  385  386  387  388  389  390
 [391]  391  392  393  394  395  396  397  398  399  400  401  402  403
 [404]  404  405  406  407  408  409  410  411  412  413  414  415  416
 [417]  417  418  419  420  421  422  423  424  425  426  427  428  429
 [430]  430  431  432  433  434  435  436  437  438  439  440  441  442
 [443]  443  444  445  446  447  448  449  450  451  452  453  454  455
 [456]  456  457  458  459  460  461  462  463  464  465  466  467  468
 [469]  469  470  471  472  473  474  475  476  477  478  479  480  481
 [482]  482  483  484  485  486  487  488  489  490  491  492  493  494
 [495]  495  496  497  498  499  500  501  502  503  504  505  506  507
 [508]  508  509  510  511  512  513  514  515  516  517  518  519  520
 [521]  521  522  523  524  525  526  527  528  529  530  531  532  533
 [534]  534  535  536  537  538  539  540  541  542  543  544  545  546
 [547]  547  548  549  550  551  552  553  554  555  556  557  558  559
 [560]  560  561  562  563  564  565  566  567  568  569  570  571  572
 [573]  573  574  575  576  577  578  579  580  581  582  583  584  585
 [586]  586  587  588  589  590  591  592  593  594  595  596  597  598
 [599]  599  600  601  602  603  604  605  606  607  608  609  610  611
 [612]  612  613  614  615  616  617  618  619  620  621  622  623  624
 [625]  625  626  627  628  629  630  631  632  633  634  635  636  637
 [638]  638  639  640  641  642  643  644  645  646  647  648  649  650
 [651]  651  652  653  654  655  656  657  658  659  660  661  662  663
 [664]  664  665  666  667  668  669  670  671  672  673  674  675  676
 [677]  677  678  679  680  681  682  683  684  685  686  687  688  689
 [690]  690  691  692  693  694  695  696  697  698  699  700  701  702
 [703]  703  704  705  706  707  708  709  710  711  712  713  714  715
 [716]  716  717  718  719  720  721  722  723  724  725  726  727  728
 [729]  729  730  731  732  733  734  735  736  737  738  739  740  741
 [742]  742  743  744  745  746  747  748  749  750  751  752  753  754
 [755]  755  756  757  758  759  760  761  762  763  764  765  766  767
 [768]  768  769  770  771  772  773  774  775  776  777  778  779  780
 [781]  781  782  783  784  785  786  787  788  789  790  791  792  793
 [794]  794  795  796  797  798  799  800  801  802  803  804  805  806
 [807]  807  808  809  810  811  812  813  814  815  816  817  818  819
 [820]  820  821  822  823  824  825  826  827  828  829  830  831  832
 [833]  833  834  835  836  837  838  839  840  841  842  843  844  845
 [846]  846  847  848  849  850  851  852  853  854  855  856  857  858
 [859]  859  860  861  862  863  864  865  866  867  868  869  870  871
 [872]  872  873  874  875  876  877  878  879  880  881  882  883  884
 [885]  885  886  887  888  889  890  891  892  893  894  895  896  897
 [898]  898  899  900  901  902  903  904  905  906  907  908  909  910
 [911]  911  912  913  914  915  916  917  918  919  920  921  922  923
 [924]  924  925  926  927  928  929  930  931  932  933  934  935  936
 [937]  937  938  939  940  941  942  943  944  945  946  947  948  949
 [950]  950  951  952  953  954  955  956  957  958  959  960  961  962
 [963]  963  964  965  966  967  968  969  970  971  972  973  974  975
 [976]  976  977  978  979  980  981  982  983  984  985  986  987  988
 [989]  989  990  991  992  993  994  995  996  997  998  999 1000
> 2 * 1:10
 [1]  2  4  6  8 10 12 14 16 18 20
> animals <- c<"bears", "monkeys", "donkeys")
Error: unexpected ',' in "animals <- c<"bears","
> "characters" 
[1] "characters"
> class(1==2)
[1] "logical"
> class(1:1000)
[1] "integer"
> 
> prices <- read.csv("subscription-prices.csv")
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") :
  cannot open file 'subscription-prices.csv': No such file or directory
> 
> prices <- read.csv("subscription-prices.csv")
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
In file(file, "rt") :
  cannot open file 'subscription-prices.csv': No such file or directory
> prices <- read.csv("subscription-prices.csv")
> 
> class(prices)
[1] "data.frame"
> 
> dim(prices)
[1] 194   2
> 
> head(prices)
             Network X2013
1               3net  1.33
2                A&E  0.29
3 ABC Family Channel  0.27
4                AMC  0.33
5      Animal Planet  0.10
6           Antena 3  0.32
> 
> 
> 
> tail(prices)
                  Network X2013
189          WAPA-America  0.23
190                 WE tv  0.13
191              WealthTV  0.15
192           WGN America  0.20
193 World Fishing Network  0.13
194             Youtoo TV  0.04
> 
> head(prices, n=2)
  Network X2013
1    3net  1.33
2     A&E  0.29
> 
> names(prices)
[1] "Network" "X2013"  
> 
> prices$X2013
  [1] 1.33 0.29 0.27 0.33 0.10 0.32 0.04 0.15 0.13 0.13 0.02 0.15 0.21
 [14] 0.20 0.05 0.07 0.11 0.06 0.07 0.03 0.09 0.24 0.11 0.37 0.06 0.08
 [27] 0.16 0.21 0.24 0.08 0.17 0.08 0.08 0.10 0.05 0.31 0.01 0.60 0.60
 [40] 0.14 0.18 0.07 0.06 0.11 0.19 0.11 0.07 0.38 0.20 0.18 0.07 1.15
 [53] 0.17 0.17 0.09 0.03 0.24 0.20 5.54 2.79 0.20 0.19 0.70 0.21 0.20
 [66] 0.00 0.04 0.19 0.13 0.41 0.22 0.18 0.94 0.18 0.18 0.06 0.51 0.10
 [79] 0.02 0.03 0.31 0.14 0.12 0.06 0.06 0.02 0.37 0.16 0.26 0.19 0.00
 [92] 0.16 0.23 0.00 0.09 0.00 0.14 0.17 0.10 0.04 0.32 0.06 0.09 0.10
[105] 0.21 0.47 0.07 0.06 0.23 0.00 0.21 0.43 0.02 0.03 0.07 0.07 0.06
[118] 0.20 0.12 0.24 0.27 0.33 1.34 0.29 0.02 0.21 0.60 0.08 0.07 0.05
[131] 0.03 0.07 0.20 0.10 0.09 0.09 0.00 0.00 0.04 0.20 0.07 0.07 0.11
[144] 0.11 0.17 0.33 0.31 0.25 0.04 0.18 0.18 0.28 0.59 0.30 0.11 0.20
[157] 0.19 0.05 0.18 0.07 0.13 0.15 0.13 0.20 1.24 0.03 0.14 0.12 0.20
[170] 0.15 0.14 0.10 0.19 0.02 0.27 0.16 0.21 0.30 0.16 0.18 0.18 0.00
[183] 0.71 0.22 0.13 0.20 0.08 0.05 0.23 0.13 0.15 0.20 0.13 0.04
> 
> class(prices$X2013)
[1] "numeric"
> 
> ?head
starting httpd help server ... done
> 
> help.search
function (pattern, fields = c("alias", "concept", "title"), apropos, 
    keyword, whatis, ignore.case = TRUE, package = NULL, lib.loc = NULL, 
    help.db = getOption("help.db"), verbose = getOption("verbose"), 
    rebuild = FALSE, agrep = NULL, use_UTF8 = FALSE, types = getOption("help.search.types")) 
{
    WINDOWS <- .Platform$OS.type == "windows"
    FIELDS <- c("alias", "concept", "keyword", "name", "title")
    TYPES <- c("help", "vignette", "demo")
    if (is.logical(verbose)) 
        verbose <- 2 * as.integer(verbose)
    .wrong_args <- function(args) gettextf("argument %s must be a single character string", 
        sQuote(args))
    fuzzy <- agrep
    if (!missing(pattern)) {
        if (!is.character(pattern) || (length(pattern) > 1L)) 
            stop(.wrong_args("pattern"), domain = NA)
        i <- pmatch(fields, FIELDS)
        if (any(is.na(i))) 
            stop("incorrect field specification")
        else fields <- FIELDS[i]
    }
    else if (!missing(apropos)) {
        if (!is.character(apropos) || (length(apropos) > 1L)) 
            stop(.wrong_args("apropos"), domain = NA)
        else {
            pattern <- apropos
            fields <- c("alias", "title")
        }
    }
    else if (!missing(keyword)) {
        if (!is.character(keyword) || (length(keyword) > 1L)) 
            stop(.wrong_args("keyword"), domain = NA)
        else {
            pattern <- keyword
            fields <- "keyword"
            if (is.null(fuzzy)) 
                fuzzy <- FALSE
        }
    }
    else if (!missing(whatis)) {
        if (!is.character(whatis) || (length(whatis) > 1)) 
            stop(.wrong_args("whatis"), domain = NA)
        else {
            pattern <- whatis
            fields <- "alias"
        }
    }
    else {
        stop("do not know what to search")
    }
    i <- pmatch(types, TYPES)
    if (any(is.na(i))) 
        stop("incorrect type specification")
    else types <- TYPES[i]
    if (is.null(lib.loc)) 
        lib.loc <- .libPaths()
    if (!missing(help.db)) 
        warning("argument 'help.db' is deprecated")
    db <- eval(.hsearch_db())
    if (is.null(db)) 
        rebuild <- TRUE
    else if (!rebuild) {
        if (!identical(lib.loc, attr(db, "LibPaths")) || !all(types %in% 
            attr(db, "Types")) || any(attr(db, "mtime") < file.info(lib.loc[file.exists(lib.loc)])$mtime) || 
            !identical(attr(db, "ctype"), Sys.getlocale("LC_CTYPE"))) 
            rebuild <- TRUE
        if (!is.null(package) && any(!package %in% db$Base[, 
            "Package"])) 
            rebuild <- TRUE
    }
    if (rebuild) {
        if (verbose > 0L) {
            message("Rebuilding the help.search() database", 
                " ", "...", if (verbose > 1L) 
                  "...", domain = NA)
            flush.console()
        }
        if (!is.null(package)) {
            packages_in_hsearch_db <- package
            package_paths <- NULL
        }
        else {
            ans <- character(0L)
            paths <- character(0L)
            lib.loc <- lib.loc[file.exists(lib.loc)]
            valid_package_version_regexp <- .standard_regexps()$valid_package_version
            for (lib in lib.loc) {
                a <- list.files(lib, all.files = FALSE, full.names = FALSE)
                for (nam in a) {
                  pfile <- file.path(lib, nam, "Meta", "package.rds")
                  if (file.exists(pfile)) 
                    info <- readRDS(pfile)$DESCRIPTION[c("Package", 
                      "Version")]
                  else next
                  if ((length(info) != 2L) || any(is.na(info))) 
                    next
                  if (!grepl(valid_package_version_regexp, info["Version"])) 
                    next
                  ans <- c(ans, nam)
                  paths <- c(paths, file.path(lib, nam))
                }
            }
            un <- !duplicated(ans)
            packages_in_hsearch_db <- ans[un]
            package_paths <- paths[un]
            names(package_paths) <- ans[un]
        }
        np <- 0L
        if (verbose >= 2L) {
            message("Packages {readRDS() sequentially}:", domain = NA)
            flush.console()
        }
        tot <- length(package_paths)
        incr <- 0L
        if (verbose && WINDOWS) {
            pb <- winProgressBar("R: creating the help.search() DB", 
                max = tot)
            on.exit(close(pb))
        }
        else if (verbose == 1L) 
            incr <- ifelse(tot > 500L, 100L, 10L)
        dbMat <- vector("list", length(packages_in_hsearch_db) * 
            4L)
        dim(dbMat) <- c(length(packages_in_hsearch_db), 4L)
        defunct_standard_package_names <- tools:::.get_standard_package_names()$stubs
        for (p in packages_in_hsearch_db) {
            if (incr && np%%incr == 0L) {
                message(".", appendLF = FALSE, domain = NA)
                flush.console()
            }
            np <- np + 1L
            if (verbose && WINDOWS) 
                setWinProgressBar(pb, np)
            if (verbose >= 2L) {
                message(" ", p, appendLF = ((np%%5L) == 0L), 
                  domain = NA)
                flush.console()
            }
            path <- if (!is.null(package_paths)) 
                package_paths[p]
            else find.package(p, lib.loc, quiet = TRUE)
            if (length(path) == 0L) {
                if (is.null(package)) 
                  next
                else stop(gettextf("could not find package %s", 
                  sQuote(p)), domain = NA)
            }
            if (file.exists(hs_file <- file.path(path, "Meta", 
                "hsearch.rds"))) {
                hDB <- readRDS(hs_file)
                if (!is.null(hDB)) {
                  if (is.na(match("Encoding", colnames(hDB[[1L]])))) 
                    hDB[[1L]] <- cbind(hDB[[1L]], Encoding = "")
                  nh <- NROW(hDB[[1L]])
                  hDB[[1L]] <- cbind(hDB[[1L]], Type = rep("help", 
                    nh))
                  if (nh) 
                    hDB[[1L]][, "LibPath"] <- path
                  if ("vignette" %in% types) 
                    hDB <- merge.vignette.index(hDB, path, p)
                  if ("demo" %in% types) 
                    hDB <- merge.demo.index(hDB, path, p)
                  dbMat[np, seq_along(hDB)] <- hDB
                }
                else if (verbose >= 2L) {
                  message(gettextf("package %s has empty hsearch data - strangely", 
                    sQuote(p)), domain = NA)
                  flush.console()
                }
            }
            else if (!is.null(package)) 
                warning("no hsearch.rds meta data for package ", 
                  p, domain = NA)
        }
        if (verbose >= 2L) {
            message(ifelse(np%%5L == 0L, "\n", "\n\n"), sprintf("Built dbMat[%d,%d]", 
                nrow(dbMat), ncol(dbMat)), domain = NA)
            flush.console()
        }
        if (.isMethodsDispatchOn()) {
            bind_was_on <- methods:::bind_activation(FALSE)
            if (bind_was_on) 
                on.exit(methods:::bind_activation(TRUE))
        }
        db <- list(Base = do.call("rbind", dbMat[, 1]), Aliases = do.call("rbind", 
            dbMat[, 2]), Keywords = do.call("rbind", dbMat[, 
            3]), Concepts = do.call("rbind", dbMat[, 4]))
        if (is.null(db$Concepts)) 
            db$Concepts <- matrix(character(), ncol = 3L, dimnames = list(NULL, 
                c("Concepts", "ID", "Package")))
        for (i in which(sapply(db, NROW) > 0L)) {
            db[[i]][, "ID"] <- paste(rep.int(seq_along(packages_in_hsearch_db), 
                sapply(dbMat[, i], NROW)), db[[i]][, "ID"], sep = "/")
        }
        if (!identical(Sys.getlocale("LC_CTYPE"), "C")) {
            if (verbose >= 2L) {
                message("reencoding ...", appendLF = FALSE, domain = NA)
                flush.console()
            }
            encoding <- db$Base[, "Encoding"]
            target <- ifelse(use_UTF8 && !l10n_info()$`UTF-8`, 
                "UTF-8", "")
            for (enc in unique(encoding)) {
                if (enc != target) 
                  next
                IDs <- db$Base[encoding == enc, "ID"]
                for (i in seq_along(db)) {
                  ind <- db[[i]][, "ID"] %in% IDs
                  db[[i]][ind, ] <- iconv(db[[i]][ind, ], enc, 
                    "")
                }
            }
            if (verbose >= 2L) {
                message(" ", "done", domain = NA)
                flush.console()
            }
        }
        bad_IDs <- unlist(sapply(db, function(u) u[rowSums(is.na(nchar(u, 
            "c", TRUE))) > 0, "ID"]))
        if (length(bad_IDs)) {
            for (i in seq_along(db)) {
                ind <- db[[i]][, "ID"] %in% bad_IDs
                db[[i]][ind, ] <- iconv(db[[i]][ind, ], "latin1", 
                  "")
            }
            bad_IDs <- unlist(sapply(db, function(u) u[rowSums(is.na(nchar(u, 
                "c", TRUE))) > 0, "ID"]))
        }
        if (length(bad_IDs)) {
            warning("removing all entries with invalid multi-byte character data")
            for (i in seq_along(db)) {
                ind <- db[[i]][, "ID"] %in% bad_IDs
                db[[i]] <- db[[i]][!ind, ]
            }
        }
        if (verbose >= 2L) {
            message("saving the database ...", appendLF = FALSE, 
                domain = NA)
            flush.console()
        }
        attr(db, "LibPaths") <- lib.loc
        attr(db, "mtime") <- Sys.time()
        attr(db, "ctype") <- Sys.getlocale("LC_CTYPE")
        attr(db, "Types") <- unique(c("help", types))
        .hsearch_db(db)
        if (verbose >= 2L) {
            message(" ", "done", domain = NA)
            flush.console()
        }
        if (verbose > 0L) {
            message("... database rebuilt", domain = NA)
            if (WINDOWS) {
                close(pb)
                on.exit()
            }
            flush.console()
        }
    }
    if (verbose >= 2L) {
        message("Database of ", NROW(db$Base), " help objects (", 
            NROW(db$Aliases), " aliases, ", NROW(db$Concepts), 
            " concepts, ", NROW(db$Keywords), " keywords)", domain = NA)
        flush.console()
    }
    if (!is.null(package)) {
        pos_in_hsearch_db <- match(package, unique(db$Base[, 
            "Package"]), nomatch = 0L)
        if (any(pos_in_hsearch_db) == 0L) 
            stop(gettextf("no information in the database for package %s: need 'rebuild = TRUE'?", 
                sQuote(package[pos_in_hsearch_db == 0][1L])), 
                domain = NA)
        db <- lapply(db, function(x) {
            x[x[, "Package"] %in% package, , drop = FALSE]
        })
    }
    db$Base <- db$Base[db$Base[, "Type"] %in% types, , drop = FALSE]
    if (!length(db$Base)) 
        return(invisible())
    if (is.null(fuzzy) || is.na(fuzzy)) 
        fuzzy <- (grepl("^([[:alnum:]]|[[:space:]]|-)+$", pattern) && 
            (nchar(pattern, type = "c") > 4L))
    if (is.logical(fuzzy)) {
        if (fuzzy) 
            max.distance <- 0.1
    }
    else if (is.numeric(fuzzy) || is.list(fuzzy)) {
        max.distance <- fuzzy
        fuzzy <- TRUE
    }
    else stop("incorrect 'agrep' specification")
    searchFun <- function(x) {
        if (fuzzy) 
            agrep(pattern, x, ignore.case = ignore.case, max.distance = max.distance)
        else grep(pattern, x, ignore.case = ignore.case, perl = use_UTF8)
    }
    dbBase <- db$Base
    searchDbField <- function(field) {
        switch(field, alias = {
            aliases <- db$Aliases
            match(aliases[searchFun(aliases[, "Aliases"]), "ID"], 
                dbBase[, "ID"])
        }, concept = {
            concepts <- db$Concepts
            match(concepts[searchFun(concepts[, "Concepts"]), 
                "ID"], dbBase[, "ID"])
        }, keyword = {
            keywords <- db$Keywords
            match(keywords[searchFun(keywords[, "Keywords"]), 
                "ID"], dbBase[, "ID"])
        }, searchFun(db$Base[, field]))
    }
    i <- NULL
    for (f in fields) i <- c(i, searchDbField(f))
    db <- dbBase[sort(unique(i)), c("topic", "title", "Package", 
        "LibPath", "name", "Type"), drop = FALSE]
    if (verbose >= 2L) {
        message(sprintf(ngettext(NROW(db), "matched %d object.", 
            "matched %d objects."), NROW(db)), domain = NA)
        flush.console()
    }
    y <- list(pattern = pattern, fields = fields, type = if (fuzzy) "fuzzy" else "regexp", 
        agrep = agrep, ignore.case = ignore.case, types = types, 
        package = package, lib.loc = lib.loc, matches = db)
    class(y) <- "hsearch"
    y
}
<bytecode: 0x101c21800>
<environment: namespace:utils>
> 
> 
> names(prices)
[1] "Network" "X2013"  
> prices$network
NULL
> 
> prices$Network
  [1] 3net                             A&E                             
  [3] ABC Family Channel               AMC                             
  [5] Animal Planet                    Antena 3                        
  [7] ASPiRE                           AXS TV                          
  [9] Bandamax                         BBC America                     
 [11] BBC World News                   beIN SPORT                      
 [13] beIN SPORT en Espa\xc7\xf1ol     BET                             
 [15] BET Gospel                       BET Hip-Hop                     
 [17] Bio                              Blackbelt TV                    
 [19] Bloomberg Television             BlueHighways TV                 
 [21] Boomerang                        Bravo                           
 [23] Bridges TV                       BTN                             
 [25] C-SPAN                           Canal Sur                       
 [27] Caracol TV                       Cartoon Network                 
 [29] CBS Sports Network               CENTRIC                         
 [31] CentroAmerica TV                 Chiller                         
 [33] Cloo                             CMT                             
 [35] CMT Pure Country                 CNBC                            
 [37] CNBC World                       CNN                             
 [39] CNN en Espa\xc7\xf1ol            CNN International               
 [41] Comedy Central                   Cooking Channel                 
 [43] Crime & Investigation Network    Current                         
 [45] De Pel\xc7\xf0cula               De Pel\xc7\xf0cula Clǭsico      
 [47] Destination America              Discovery Channel               
 [49] Discovery en Espa\xc7\xf1ol      Discovery Familia               
 [51] Discovery Fit & Health           Disney Channel                  
 [53] Disney Junior                    Disney XD                       
 [55] DIY Network                      Documentary Channel             
 [57] E! Entertainment Television      Ecuavisa                        
 [59] ESPN                             ESPN 3D                         
 [61] ESPN Classic                     ESPN Deportes                   
 [63] ESPN2                            ESPNews                         
 [65] ESPNU                            FamilyNet                       
 [67] FEARnet                          Food Network                    
 [69] FOX Business Network             FOX College Sports              
 [71] FOX Deportes                     Fox Movie Channel/FX Movies     
 [73] FOX News                         FOX Soccer                      
 [75] FUEL TV                          FUSE                            
 [77] FX Network                       G4                              
 [79] GAC                              Galavision                      
 [81] Golf Channel                     GolTV                           
 [83] GSN                              H2                              
 [85] Hallmark Channel                 Hallmark Movie Channel          
 [87] HDNet Movies                     HGTV                            
 [89] History                          History en Espa\xc7\xf1ol       
 [91] HLN                              HTV                             
 [93] Independent Film Channel         INSP                            
 [95] Investigation Discovery          Justice Central. TV             
 [97] La Familia Cosmovision           LatinoamǸrica Televisi\xc7\xfcn 
 [99] Lifetime Movie Network           Lifetime Real Women             
[101] Lifetime Television              LOGO                            
[103] MAVTV                            MEXICANAL                       
[105] Mexico TV                        MGM HD                          
[107] Military Channel                 Military History Channel        
[109] MLB Network                      Mnet                            
[111] MSNBC                            MTV                             
[113] MTV Hits                         MTV Jams                        
[115] mtv-U                            MTV2                            
[117] mun2                             Nat Geo Mundo                   
[119] Nat Geo WILD                     National Geographic Channel     
[121] NBA TV                           NBC Sports Network              
[123] NFL Network                      NHL Network                     
[125] Nick 2                           Nick Jr./NickMom                
[127] Nickelodeon/Nick At Nite         Nicktoons Network               
[129] NuvoTV                           Outdoor Channel                 
[131] Outside Television               Ovation                         
[133] OWN: Oprah Winfrey Network       Oxygen Network                  
[135] Palladia                         PBS KIDS Sprout                 
[137] ReelzChannel                     Resort & Residence              
[139] RFD-TV                           Ritmoson Latino                 
[141] RLTV                             Science                         
[143] ShortsHD                         Smithsonian Channel             
[145] SOAPnet                          Sony Movie Channel              
[147] SPEED                            Spike TV                        
[149] Sportsman Channel                Sundance Channel                
[151] Sur Peru                         Syfy                            
[153] TBS                              TCM                             
[155] TeenNick                         Telefe International            
[157] Telehit                          Tempo                           
[159] Tennis Channel                   The Africa Channel              
[161] The Hub                          The Style Network               
[163] The Weather Channel              TLC                             
[165] TNT                              Tr3s                            
[167] Travel Channel                   truTV                           
[169] TV Chile                         TV Colombia                     
[171] TV Land                          TV One                          
[173] TV Venezuela                     TVGN                            
[175] TyC Sports International Channel Universal HD                    
[177] Universal Sports                 Univision Deportes              
[179] Univision Deportes Dos           Univision Noticias              
[181] Univision tlnovelas              UP                              
[183] USA                              Util\xc7\xf0sima                
[185] Velocity                         VH1                             
[187] VH1 Classic                      VH1 Soul                        
[189] WAPA-America                     WE tv                           
[191] WealthTV                         WGN America                     
[193] World Fishing Network            Youtoo TV                       
194 Levels: 3net A&E ABC Family Channel AMC Animal Planet ... Youtoo TV
> 
> 
> prices[ 1:2,1 ]
[1] 3net A&E 
194 Levels: 3net A&E ABC Family Channel AMC Animal Planet Antena 3 ASPiRE ... Youtoo TV
> 
> 
> max(1:100)
[1] 100
> 
> max(prices)
Error in FUN(X[[1L]], ...) : 
  only defined on a data frame with all numeric variables
> max(prices$X2013)
[1] 5.54
> 
> min(prices$X2013)
[1] 0
> 
> subset(prices, X2013=5.54)
                             Network X2013
1                               3net  1.33
2                                A&E  0.29
3                 ABC Family Channel  0.27
4                                AMC  0.33
5                      Animal Planet  0.10
6                           Antena 3  0.32
7                             ASPiRE  0.04
8                             AXS TV  0.15
9                           Bandamax  0.13
10                       BBC America  0.13
11                    BBC World News  0.02
12                        beIN SPORT  0.15
13      beIN SPORT en Espa\xc7\xf1ol  0.21
14                               BET  0.20
15                        BET Gospel  0.05
16                       BET Hip-Hop  0.07
17                               Bio  0.11
18                      Blackbelt TV  0.06
19              Bloomberg Television  0.07
20                   BlueHighways TV  0.03
21                         Boomerang  0.09
22                             Bravo  0.24
23                        Bridges TV  0.11
24                               BTN  0.37
25                            C-SPAN  0.06
26                         Canal Sur  0.08
27                        Caracol TV  0.16
28                   Cartoon Network  0.21
29                CBS Sports Network  0.24
30                           CENTRIC  0.08
31                  CentroAmerica TV  0.17
32                           Chiller  0.08
33                              Cloo  0.08
34                               CMT  0.10
35                  CMT Pure Country  0.05
36                              CNBC  0.31
37                        CNBC World  0.01
38                               CNN  0.60
39             CNN en Espa\xc7\xf1ol  0.60
40                 CNN International  0.14
41                    Comedy Central  0.18
42                   Cooking Channel  0.07
43     Crime & Investigation Network  0.06
44                           Current  0.11
45                De Pel\xc7\xf0cula  0.19
46        De Pel\xc7\xf0cula Clǭsico  0.11
47               Destination America  0.07
48                 Discovery Channel  0.38
49       Discovery en Espa\xc7\xf1ol  0.20
50                 Discovery Familia  0.18
51            Discovery Fit & Health  0.07
52                    Disney Channel  1.15
53                     Disney Junior  0.17
54                         Disney XD  0.17
55                       DIY Network  0.09
56               Documentary Channel  0.03
57       E! Entertainment Television  0.24
58                          Ecuavisa  0.20
59                              ESPN  5.54
60                           ESPN 3D  2.79
61                      ESPN Classic  0.20
62                     ESPN Deportes  0.19
63                             ESPN2  0.70
64                           ESPNews  0.21
65                             ESPNU  0.20
66                         FamilyNet  0.00
67                           FEARnet  0.04
68                      Food Network  0.19
69              FOX Business Network  0.13
70                FOX College Sports  0.41
71                      FOX Deportes  0.22
72       Fox Movie Channel/FX Movies  0.18
73                          FOX News  0.94
74                        FOX Soccer  0.18
75                           FUEL TV  0.18
76                              FUSE  0.06
77                        FX Network  0.51
78                                G4  0.10
79                               GAC  0.02
80                        Galavision  0.03
81                      Golf Channel  0.31
82                             GolTV  0.14
83                               GSN  0.12
84                                H2  0.06
85                  Hallmark Channel  0.06
86            Hallmark Movie Channel  0.02
87                      HDNet Movies  0.37
88                              HGTV  0.16
89                           History  0.26
90         History en Espa\xc7\xf1ol  0.19
91                               HLN  0.00
92                               HTV  0.16
93          Independent Film Channel  0.23
94                              INSP  0.00
95           Investigation Discovery  0.09
96               Justice Central. TV  0.00
97            La Familia Cosmovision  0.14
98   LatinoamǸrica Televisi\xc7\xfcn  0.17
99            Lifetime Movie Network  0.10
100              Lifetime Real Women  0.04
101              Lifetime Television  0.32
102                             LOGO  0.06
103                            MAVTV  0.09
104                        MEXICANAL  0.10
105                        Mexico TV  0.21
106                           MGM HD  0.47
107                 Military Channel  0.07
108         Military History Channel  0.06
109                      MLB Network  0.23
110                             Mnet  0.00
111                            MSNBC  0.21
112                              MTV  0.43
113                         MTV Hits  0.02
114                         MTV Jams  0.03
115                            mtv-U  0.07
116                             MTV2  0.07
117                             mun2  0.06
118                    Nat Geo Mundo  0.20
119                     Nat Geo WILD  0.12
120      National Geographic Channel  0.24
121                           NBA TV  0.27
122               NBC Sports Network  0.33
123                      NFL Network  1.34
124                      NHL Network  0.29
125                           Nick 2  0.02
126                 Nick Jr./NickMom  0.21
127         Nickelodeon/Nick At Nite  0.60
128                Nicktoons Network  0.08
129                           NuvoTV  0.07
130                  Outdoor Channel  0.05
131               Outside Television  0.03
132                          Ovation  0.07
133       OWN: Oprah Winfrey Network  0.20
134                   Oxygen Network  0.10
135                         Palladia  0.09
136                  PBS KIDS Sprout  0.09
137                     ReelzChannel  0.00
138               Resort & Residence  0.00
139                           RFD-TV  0.04
140                  Ritmoson Latino  0.20
141                             RLTV  0.07
142                          Science  0.07
143                         ShortsHD  0.11
144              Smithsonian Channel  0.11
145                          SOAPnet  0.17
146               Sony Movie Channel  0.33
147                            SPEED  0.31
148                         Spike TV  0.25
149                Sportsman Channel  0.04
150                 Sundance Channel  0.18
151                         Sur Peru  0.18
152                             Syfy  0.28
153                              TBS  0.59
154                              TCM  0.30
155                         TeenNick  0.11
156             Telefe International  0.20
157                          Telehit  0.19
158                            Tempo  0.05
159                   Tennis Channel  0.18
160               The Africa Channel  0.07
161                          The Hub  0.13
162                The Style Network  0.15
163              The Weather Channel  0.13
164                              TLC  0.20
165                              TNT  1.24
166                             Tr3s  0.03
167                   Travel Channel  0.14
168                            truTV  0.12
169                         TV Chile  0.20
170                      TV Colombia  0.15
171                          TV Land  0.14
172                           TV One  0.10
173                     TV Venezuela  0.19
174                             TVGN  0.02
175 TyC Sports International Channel  0.27
176                     Universal HD  0.16
177                 Universal Sports  0.21
178               Univision Deportes  0.30
179           Univision Deportes Dos  0.16
180               Univision Noticias  0.18
181              Univision tlnovelas  0.18
182                               UP  0.00
183                              USA  0.71
184                 Util\xc7\xf0sima  0.22
185                         Velocity  0.13
186                              VH1  0.20
187                      VH1 Classic  0.08
188                         VH1 Soul  0.05
189                     WAPA-America  0.23
190                            WE tv  0.13
191                         WealthTV  0.15
192                      WGN America  0.20
193            World Fishing Network  0.13
194                        Youtoo TV  0.04
> 
> subset(prices, X2013 == 5.54)
   Network X2013
59    ESPN  5.54
> mean(prices$X2013)
[1] 0.2306701
> 
> plot(prices$X2013)
> 
> order(prices$X2013)
  [1]  66  91  94  96 110 137 138 182  37  11  79  86 113 125 174  20  56  80 114 131 166   7  67 100
 [25] 139 149 194  15  35 130 158 188  18  25  43  76  84  85 102 108 117  16  19  42  47  51 107 115
 [49] 116 129 132 141 142 160  26  30  32  33 128 187  21  55  95 103 135 136   5  34  78  99 104 134
 [73] 172  17  23  44  46 143 144 155  83 119 168   9  10  69 161 163 185 190 193  40  82  97 167 171
 [97]   8  12 162 170 191  27  88  92 176 179  31  53  54  98 145  41  50  72  74  75 150 151 159 180
[121] 181  45  62  68  90 157 173  14  49  58  61  65 118 133 140 156 164 169 186 192  13  28  64 105
[145] 111 126 177  71 184  93 109 189  22  29  57 120 148  89   3 121 175 152   2 124 154 178  36  81
[169] 147   6 101   4 122 146  24  87  48  70 112 106  77 153  38  39 127  63 183  73  52 165   1 123
[193]  60  59
> 
> prices <- prices[order(prices$X2013, decreasing=T),]
> 
> 
> prices <- prices[order(prices$X2013, decreasing=T),]
> head(prices)
           Network X2013
59            ESPN  5.54
60         ESPN 3D  2.79
123    NFL Network  1.34
1             3net  1.33
165            TNT  1.24
52  Disney Channel  1.15
> plot(prices)
> plot(prices$X2013)
> 
> barplot(prices$X2013)
> 
> plot(prices$X2013, type="l")
> 
> barplot(prices$X2013, col="blue", border=F, ylab="prices")
> ifelse(prices$Network == "ESPN", "red", "grey")
  [1] "red"  "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [14] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [27] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [40] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [53] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [66] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [79] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
 [92] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[105] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[118] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[131] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[144] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[157] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[170] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
[183] "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey" "grey"
> 
> 
> prices$Network == ESPN
Error: object 'ESPN' not found
> prices$Network == "ESPN"
  [1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [17] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [33] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [65] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [81] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
 [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[113] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[129] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[145] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[161] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[177] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[193] FALSE FALSE
> 1 == 2
[1] FALSE
> 
> moo <- c(1,2,3)
> moo == 2
[1] FALSE  TRUE FALSE
> 
> tail(prices)
                Network X2013
94                 INSP     0
96  Justice Central. TV     0
110                Mnet     0
137        ReelzChannel     0
138  Resort & Residence     0
182                  UP     0
> barplot(prices$X2013, col=barcolors)
Error in barplot.default(prices$X2013, col = barcolors) : 
  object 'barcolors' not found
> barplot(prices$X2013, col=barplot)
Warning message:
In rect(y1, x1, y2, x2, ...) :
  supplied color is neither numeric nor character
> 
> 
> 